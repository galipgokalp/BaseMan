#!/usr/bin/env node
import "dotenv/config";
import fs from "fs";
import path from "path";
import url from "url";

const ROOT = path.resolve(path.dirname(url.fileURLToPath(import.meta.url)), "..");
const OUTPUT = path.join(ROOT, "src", "onchain-config.js");

const registryAddress = process.env.NEXT_PUBLIC_REGISTRY_ADDRESS;
if (!registryAddress) {
  throw new Error("NEXT_PUBLIC_REGISTRY_ADDRESS env variable is required to generate on-chain config.");
}

const chainIdRaw = process.env.REGISTRY_CHAIN_ID ?? "84532";
let chainId;
try {
  chainId = Number(chainIdRaw);
  if (!Number.isFinite(chainId) || chainId <= 0) {
    throw new Error();
  }
} catch {
  throw new Error("REGISTRY_CHAIN_ID must be a positive integer.");
}

const config = {
  registryAddress,
  chainId,
  scoreEndpoint: "/api/score-sign",
  questEndpoint: "/api/quest-sign"
};

fs.writeFileSync(
  OUTPUT,
  `// Auto-generated by scripts/generate-onchain-config.mjs\nexport const onchainConfig = ${JSON.stringify(config, null, 2)};\n`,
  "utf8"
);

console.log(`On-chain config generated at ${path.relative(ROOT, OUTPUT)}`);
